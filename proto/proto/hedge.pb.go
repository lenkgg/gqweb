// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hedge.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetMysymbolRequest struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	SlotId               uint32   `protobuf:"varint,3,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	Symbol               string   `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetMysymbolRequest) Reset()         { *m = SetMysymbolRequest{} }
func (m *SetMysymbolRequest) String() string { return proto.CompactTextString(m) }
func (*SetMysymbolRequest) ProtoMessage()    {}
func (*SetMysymbolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{0}
}

func (m *SetMysymbolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetMysymbolRequest.Unmarshal(m, b)
}
func (m *SetMysymbolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetMysymbolRequest.Marshal(b, m, deterministic)
}
func (m *SetMysymbolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetMysymbolRequest.Merge(m, src)
}
func (m *SetMysymbolRequest) XXX_Size() int {
	return xxx_messageInfo_SetMysymbolRequest.Size(m)
}
func (m *SetMysymbolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetMysymbolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetMysymbolRequest proto.InternalMessageInfo

func (m *SetMysymbolRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *SetMysymbolRequest) GetSlotId() uint32 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (m *SetMysymbolRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type SetMysymbolResponse struct {
	Slot                 []byte   `protobuf:"bytes,3,opt,name=slot,proto3" json:"slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetMysymbolResponse) Reset()         { *m = SetMysymbolResponse{} }
func (m *SetMysymbolResponse) String() string { return proto.CompactTextString(m) }
func (*SetMysymbolResponse) ProtoMessage()    {}
func (*SetMysymbolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{1}
}

func (m *SetMysymbolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetMysymbolResponse.Unmarshal(m, b)
}
func (m *SetMysymbolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetMysymbolResponse.Marshal(b, m, deterministic)
}
func (m *SetMysymbolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetMysymbolResponse.Merge(m, src)
}
func (m *SetMysymbolResponse) XXX_Size() int {
	return xxx_messageInfo_SetMysymbolResponse.Size(m)
}
func (m *SetMysymbolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetMysymbolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetMysymbolResponse proto.InternalMessageInfo

func (m *SetMysymbolResponse) GetSlot() []byte {
	if m != nil {
		return m.Slot
	}
	return nil
}

type OpenMyslotRequest struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Months               int32    `protobuf:"varint,3,opt,name=months,proto3" json:"months,omitempty"`
	Days                 int32    `protobuf:"varint,4,opt,name=days,proto3" json:"days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenMyslotRequest) Reset()         { *m = OpenMyslotRequest{} }
func (m *OpenMyslotRequest) String() string { return proto.CompactTextString(m) }
func (*OpenMyslotRequest) ProtoMessage()    {}
func (*OpenMyslotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{2}
}

func (m *OpenMyslotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenMyslotRequest.Unmarshal(m, b)
}
func (m *OpenMyslotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenMyslotRequest.Marshal(b, m, deterministic)
}
func (m *OpenMyslotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenMyslotRequest.Merge(m, src)
}
func (m *OpenMyslotRequest) XXX_Size() int {
	return xxx_messageInfo_OpenMyslotRequest.Size(m)
}
func (m *OpenMyslotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenMyslotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenMyslotRequest proto.InternalMessageInfo

func (m *OpenMyslotRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *OpenMyslotRequest) GetMonths() int32 {
	if m != nil {
		return m.Months
	}
	return 0
}

func (m *OpenMyslotRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

type OpenMyslotResponse struct {
	Myslots              []byte   `protobuf:"bytes,3,opt,name=myslots,proto3" json:"myslots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenMyslotResponse) Reset()         { *m = OpenMyslotResponse{} }
func (m *OpenMyslotResponse) String() string { return proto.CompactTextString(m) }
func (*OpenMyslotResponse) ProtoMessage()    {}
func (*OpenMyslotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{3}
}

func (m *OpenMyslotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenMyslotResponse.Unmarshal(m, b)
}
func (m *OpenMyslotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenMyslotResponse.Marshal(b, m, deterministic)
}
func (m *OpenMyslotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenMyslotResponse.Merge(m, src)
}
func (m *OpenMyslotResponse) XXX_Size() int {
	return xxx_messageInfo_OpenMyslotResponse.Size(m)
}
func (m *OpenMyslotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenMyslotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenMyslotResponse proto.InternalMessageInfo

func (m *OpenMyslotResponse) GetMyslots() []byte {
	if m != nil {
		return m.Myslots
	}
	return nil
}

type GetMyslotRequest struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMyslotRequest) Reset()         { *m = GetMyslotRequest{} }
func (m *GetMyslotRequest) String() string { return proto.CompactTextString(m) }
func (*GetMyslotRequest) ProtoMessage()    {}
func (*GetMyslotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{4}
}

func (m *GetMyslotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMyslotRequest.Unmarshal(m, b)
}
func (m *GetMyslotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMyslotRequest.Marshal(b, m, deterministic)
}
func (m *GetMyslotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMyslotRequest.Merge(m, src)
}
func (m *GetMyslotRequest) XXX_Size() int {
	return xxx_messageInfo_GetMyslotRequest.Size(m)
}
func (m *GetMyslotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMyslotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMyslotRequest proto.InternalMessageInfo

func (m *GetMyslotRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type GetMyslotResponse struct {
	Myslots              []byte   `protobuf:"bytes,3,opt,name=myslots,proto3" json:"myslots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMyslotResponse) Reset()         { *m = GetMyslotResponse{} }
func (m *GetMyslotResponse) String() string { return proto.CompactTextString(m) }
func (*GetMyslotResponse) ProtoMessage()    {}
func (*GetMyslotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{5}
}

func (m *GetMyslotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMyslotResponse.Unmarshal(m, b)
}
func (m *GetMyslotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMyslotResponse.Marshal(b, m, deterministic)
}
func (m *GetMyslotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMyslotResponse.Merge(m, src)
}
func (m *GetMyslotResponse) XXX_Size() int {
	return xxx_messageInfo_GetMyslotResponse.Size(m)
}
func (m *GetMyslotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMyslotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMyslotResponse proto.InternalMessageInfo

func (m *GetMyslotResponse) GetMyslots() []byte {
	if m != nil {
		return m.Myslots
	}
	return nil
}

type SetMyslotRequest struct {
	Uid                  uint64   `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Sid                  uint32   `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetMyslotRequest) Reset()         { *m = SetMyslotRequest{} }
func (m *SetMyslotRequest) String() string { return proto.CompactTextString(m) }
func (*SetMyslotRequest) ProtoMessage()    {}
func (*SetMyslotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{6}
}

func (m *SetMyslotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetMyslotRequest.Unmarshal(m, b)
}
func (m *SetMyslotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetMyslotRequest.Marshal(b, m, deterministic)
}
func (m *SetMyslotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetMyslotRequest.Merge(m, src)
}
func (m *SetMyslotRequest) XXX_Size() int {
	return xxx_messageInfo_SetMyslotRequest.Size(m)
}
func (m *SetMyslotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetMyslotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetMyslotRequest proto.InternalMessageInfo

func (m *SetMyslotRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *SetMyslotRequest) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *SetMyslotRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetMyslotRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type SetMyslotResponse struct {
	Uid                  uint64   `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Slot                 []byte   `protobuf:"bytes,4,opt,name=slot,proto3" json:"slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetMyslotResponse) Reset()         { *m = SetMyslotResponse{} }
func (m *SetMyslotResponse) String() string { return proto.CompactTextString(m) }
func (*SetMyslotResponse) ProtoMessage()    {}
func (*SetMyslotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{7}
}

func (m *SetMyslotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetMyslotResponse.Unmarshal(m, b)
}
func (m *SetMyslotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetMyslotResponse.Marshal(b, m, deterministic)
}
func (m *SetMyslotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetMyslotResponse.Merge(m, src)
}
func (m *SetMyslotResponse) XXX_Size() int {
	return xxx_messageInfo_SetMyslotResponse.Size(m)
}
func (m *SetMyslotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetMyslotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetMyslotResponse proto.InternalMessageInfo

func (m *SetMyslotResponse) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *SetMyslotResponse) GetSlot() []byte {
	if m != nil {
		return m.Slot
	}
	return nil
}

type HedgeRequest struct {
	Bsymbol              string   `protobuf:"bytes,2,opt,name=bsymbol,proto3" json:"bsymbol,omitempty"`
	Ktype                string   `protobuf:"bytes,3,opt,name=ktype,proto3" json:"ktype,omitempty"`
	Scope                string   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HedgeRequest) Reset()         { *m = HedgeRequest{} }
func (m *HedgeRequest) String() string { return proto.CompactTextString(m) }
func (*HedgeRequest) ProtoMessage()    {}
func (*HedgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{8}
}

func (m *HedgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HedgeRequest.Unmarshal(m, b)
}
func (m *HedgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HedgeRequest.Marshal(b, m, deterministic)
}
func (m *HedgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HedgeRequest.Merge(m, src)
}
func (m *HedgeRequest) XXX_Size() int {
	return xxx_messageInfo_HedgeRequest.Size(m)
}
func (m *HedgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HedgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HedgeRequest proto.InternalMessageInfo

func (m *HedgeRequest) GetBsymbol() string {
	if m != nil {
		return m.Bsymbol
	}
	return ""
}

func (m *HedgeRequest) GetKtype() string {
	if m != nil {
		return m.Ktype
	}
	return ""
}

func (m *HedgeRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type HedgeResponse struct {
	Dtime                uint64   `protobuf:"varint,3,opt,name=dtime,proto3" json:"dtime,omitempty"`
	Ktype                string   `protobuf:"bytes,4,opt,name=ktype,proto3" json:"ktype,omitempty"`
	Bsymbol              string   `protobuf:"bytes,5,opt,name=bsymbol,proto3" json:"bsymbol,omitempty"`
	Scope                string   `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	JsResult             []byte   `protobuf:"bytes,7,opt,name=js_result,json=jsResult,proto3" json:"js_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HedgeResponse) Reset()         { *m = HedgeResponse{} }
func (m *HedgeResponse) String() string { return proto.CompactTextString(m) }
func (*HedgeResponse) ProtoMessage()    {}
func (*HedgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{9}
}

func (m *HedgeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HedgeResponse.Unmarshal(m, b)
}
func (m *HedgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HedgeResponse.Marshal(b, m, deterministic)
}
func (m *HedgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HedgeResponse.Merge(m, src)
}
func (m *HedgeResponse) XXX_Size() int {
	return xxx_messageInfo_HedgeResponse.Size(m)
}
func (m *HedgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HedgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HedgeResponse proto.InternalMessageInfo

func (m *HedgeResponse) GetDtime() uint64 {
	if m != nil {
		return m.Dtime
	}
	return 0
}

func (m *HedgeResponse) GetKtype() string {
	if m != nil {
		return m.Ktype
	}
	return ""
}

func (m *HedgeResponse) GetBsymbol() string {
	if m != nil {
		return m.Bsymbol
	}
	return ""
}

func (m *HedgeResponse) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *HedgeResponse) GetJsResult() []byte {
	if m != nil {
		return m.JsResult
	}
	return nil
}

type PredictRequest struct {
	Symbols              []string `protobuf:"bytes,2,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Ktype                string   `protobuf:"bytes,3,opt,name=ktype,proto3" json:"ktype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PredictRequest) Reset()         { *m = PredictRequest{} }
func (m *PredictRequest) String() string { return proto.CompactTextString(m) }
func (*PredictRequest) ProtoMessage()    {}
func (*PredictRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{10}
}

func (m *PredictRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictRequest.Unmarshal(m, b)
}
func (m *PredictRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictRequest.Marshal(b, m, deterministic)
}
func (m *PredictRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictRequest.Merge(m, src)
}
func (m *PredictRequest) XXX_Size() int {
	return xxx_messageInfo_PredictRequest.Size(m)
}
func (m *PredictRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PredictRequest proto.InternalMessageInfo

func (m *PredictRequest) GetSymbols() []string {
	if m != nil {
		return m.Symbols
	}
	return nil
}

func (m *PredictRequest) GetKtype() string {
	if m != nil {
		return m.Ktype
	}
	return ""
}

type PredictResponse struct {
	JsKline              []byte   `protobuf:"bytes,4,opt,name=js_kline,json=jsKline,proto3" json:"js_kline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PredictResponse) Reset()         { *m = PredictResponse{} }
func (m *PredictResponse) String() string { return proto.CompactTextString(m) }
func (*PredictResponse) ProtoMessage()    {}
func (*PredictResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{11}
}

func (m *PredictResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictResponse.Unmarshal(m, b)
}
func (m *PredictResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictResponse.Marshal(b, m, deterministic)
}
func (m *PredictResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictResponse.Merge(m, src)
}
func (m *PredictResponse) XXX_Size() int {
	return xxx_messageInfo_PredictResponse.Size(m)
}
func (m *PredictResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PredictResponse proto.InternalMessageInfo

func (m *PredictResponse) GetJsKline() []byte {
	if m != nil {
		return m.JsKline
	}
	return nil
}

type TimerPredictRequest struct {
	Ktype                string   `protobuf:"bytes,3,opt,name=ktype,proto3" json:"ktype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimerPredictRequest) Reset()         { *m = TimerPredictRequest{} }
func (m *TimerPredictRequest) String() string { return proto.CompactTextString(m) }
func (*TimerPredictRequest) ProtoMessage()    {}
func (*TimerPredictRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{12}
}

func (m *TimerPredictRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimerPredictRequest.Unmarshal(m, b)
}
func (m *TimerPredictRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimerPredictRequest.Marshal(b, m, deterministic)
}
func (m *TimerPredictRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimerPredictRequest.Merge(m, src)
}
func (m *TimerPredictRequest) XXX_Size() int {
	return xxx_messageInfo_TimerPredictRequest.Size(m)
}
func (m *TimerPredictRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimerPredictRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimerPredictRequest proto.InternalMessageInfo

func (m *TimerPredictRequest) GetKtype() string {
	if m != nil {
		return m.Ktype
	}
	return ""
}

type TimerPredictResponse struct {
	JsKlines             []byte   `protobuf:"bytes,4,opt,name=js_klines,json=jsKlines,proto3" json:"js_klines,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimerPredictResponse) Reset()         { *m = TimerPredictResponse{} }
func (m *TimerPredictResponse) String() string { return proto.CompactTextString(m) }
func (*TimerPredictResponse) ProtoMessage()    {}
func (*TimerPredictResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{13}
}

func (m *TimerPredictResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimerPredictResponse.Unmarshal(m, b)
}
func (m *TimerPredictResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimerPredictResponse.Marshal(b, m, deterministic)
}
func (m *TimerPredictResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimerPredictResponse.Merge(m, src)
}
func (m *TimerPredictResponse) XXX_Size() int {
	return xxx_messageInfo_TimerPredictResponse.Size(m)
}
func (m *TimerPredictResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TimerPredictResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TimerPredictResponse proto.InternalMessageInfo

func (m *TimerPredictResponse) GetJsKlines() []byte {
	if m != nil {
		return m.JsKlines
	}
	return nil
}

type TimerHedgeRequest struct {
	Ktype                string   `protobuf:"bytes,3,opt,name=ktype,proto3" json:"ktype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimerHedgeRequest) Reset()         { *m = TimerHedgeRequest{} }
func (m *TimerHedgeRequest) String() string { return proto.CompactTextString(m) }
func (*TimerHedgeRequest) ProtoMessage()    {}
func (*TimerHedgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{14}
}

func (m *TimerHedgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimerHedgeRequest.Unmarshal(m, b)
}
func (m *TimerHedgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimerHedgeRequest.Marshal(b, m, deterministic)
}
func (m *TimerHedgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimerHedgeRequest.Merge(m, src)
}
func (m *TimerHedgeRequest) XXX_Size() int {
	return xxx_messageInfo_TimerHedgeRequest.Size(m)
}
func (m *TimerHedgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimerHedgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimerHedgeRequest proto.InternalMessageInfo

func (m *TimerHedgeRequest) GetKtype() string {
	if m != nil {
		return m.Ktype
	}
	return ""
}

type TimerHedgeResponse struct {
	JsResult             []byte   `protobuf:"bytes,6,opt,name=js_result,json=jsResult,proto3" json:"js_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimerHedgeResponse) Reset()         { *m = TimerHedgeResponse{} }
func (m *TimerHedgeResponse) String() string { return proto.CompactTextString(m) }
func (*TimerHedgeResponse) ProtoMessage()    {}
func (*TimerHedgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{15}
}

func (m *TimerHedgeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimerHedgeResponse.Unmarshal(m, b)
}
func (m *TimerHedgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimerHedgeResponse.Marshal(b, m, deterministic)
}
func (m *TimerHedgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimerHedgeResponse.Merge(m, src)
}
func (m *TimerHedgeResponse) XXX_Size() int {
	return xxx_messageInfo_TimerHedgeResponse.Size(m)
}
func (m *TimerHedgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TimerHedgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TimerHedgeResponse proto.InternalMessageInfo

func (m *TimerHedgeResponse) GetJsResult() []byte {
	if m != nil {
		return m.JsResult
	}
	return nil
}

type InitSlotsRequest struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitSlotsRequest) Reset()         { *m = InitSlotsRequest{} }
func (m *InitSlotsRequest) String() string { return proto.CompactTextString(m) }
func (*InitSlotsRequest) ProtoMessage()    {}
func (*InitSlotsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{16}
}

func (m *InitSlotsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitSlotsRequest.Unmarshal(m, b)
}
func (m *InitSlotsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitSlotsRequest.Marshal(b, m, deterministic)
}
func (m *InitSlotsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitSlotsRequest.Merge(m, src)
}
func (m *InitSlotsRequest) XXX_Size() int {
	return xxx_messageInfo_InitSlotsRequest.Size(m)
}
func (m *InitSlotsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitSlotsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitSlotsRequest proto.InternalMessageInfo

func (m *InitSlotsRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type InitSlotsResponse struct {
	Myslots              []byte   `protobuf:"bytes,2,opt,name=myslots,proto3" json:"myslots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitSlotsResponse) Reset()         { *m = InitSlotsResponse{} }
func (m *InitSlotsResponse) String() string { return proto.CompactTextString(m) }
func (*InitSlotsResponse) ProtoMessage()    {}
func (*InitSlotsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{17}
}

func (m *InitSlotsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitSlotsResponse.Unmarshal(m, b)
}
func (m *InitSlotsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitSlotsResponse.Marshal(b, m, deterministic)
}
func (m *InitSlotsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitSlotsResponse.Merge(m, src)
}
func (m *InitSlotsResponse) XXX_Size() int {
	return xxx_messageInfo_InitSlotsResponse.Size(m)
}
func (m *InitSlotsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitSlotsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitSlotsResponse proto.InternalMessageInfo

func (m *InitSlotsResponse) GetMyslots() []byte {
	if m != nil {
		return m.Myslots
	}
	return nil
}

type RenewSlotRequest struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	SlotId               uint32   `protobuf:"varint,3,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	Months               int32    `protobuf:"varint,4,opt,name=months,proto3" json:"months,omitempty"`
	Days                 int32    `protobuf:"varint,5,opt,name=days,proto3" json:"days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewSlotRequest) Reset()         { *m = RenewSlotRequest{} }
func (m *RenewSlotRequest) String() string { return proto.CompactTextString(m) }
func (*RenewSlotRequest) ProtoMessage()    {}
func (*RenewSlotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{18}
}

func (m *RenewSlotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewSlotRequest.Unmarshal(m, b)
}
func (m *RenewSlotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewSlotRequest.Marshal(b, m, deterministic)
}
func (m *RenewSlotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewSlotRequest.Merge(m, src)
}
func (m *RenewSlotRequest) XXX_Size() int {
	return xxx_messageInfo_RenewSlotRequest.Size(m)
}
func (m *RenewSlotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewSlotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenewSlotRequest proto.InternalMessageInfo

func (m *RenewSlotRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *RenewSlotRequest) GetSlotId() uint32 {
	if m != nil {
		return m.SlotId
	}
	return 0
}

func (m *RenewSlotRequest) GetMonths() int32 {
	if m != nil {
		return m.Months
	}
	return 0
}

func (m *RenewSlotRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

type RenewSlotResponse struct {
	Myslots              []byte   `protobuf:"bytes,3,opt,name=myslots,proto3" json:"myslots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewSlotResponse) Reset()         { *m = RenewSlotResponse{} }
func (m *RenewSlotResponse) String() string { return proto.CompactTextString(m) }
func (*RenewSlotResponse) ProtoMessage()    {}
func (*RenewSlotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{19}
}

func (m *RenewSlotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewSlotResponse.Unmarshal(m, b)
}
func (m *RenewSlotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewSlotResponse.Marshal(b, m, deterministic)
}
func (m *RenewSlotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewSlotResponse.Merge(m, src)
}
func (m *RenewSlotResponse) XXX_Size() int {
	return xxx_messageInfo_RenewSlotResponse.Size(m)
}
func (m *RenewSlotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewSlotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenewSlotResponse proto.InternalMessageInfo

func (m *RenewSlotResponse) GetMyslots() []byte {
	if m != nil {
		return m.Myslots
	}
	return nil
}

//////奖励某uin插槽时间
type RewardRequest struct {
	Uin                  uint64   `protobuf:"varint,2,opt,name=uin,proto3" json:"uin,omitempty"`
	Months               int32    `protobuf:"varint,4,opt,name=months,proto3" json:"months,omitempty"`
	Days                 int32    `protobuf:"varint,5,opt,name=days,proto3" json:"days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RewardRequest) Reset()         { *m = RewardRequest{} }
func (m *RewardRequest) String() string { return proto.CompactTextString(m) }
func (*RewardRequest) ProtoMessage()    {}
func (*RewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{20}
}

func (m *RewardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewardRequest.Unmarshal(m, b)
}
func (m *RewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewardRequest.Marshal(b, m, deterministic)
}
func (m *RewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardRequest.Merge(m, src)
}
func (m *RewardRequest) XXX_Size() int {
	return xxx_messageInfo_RewardRequest.Size(m)
}
func (m *RewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RewardRequest proto.InternalMessageInfo

func (m *RewardRequest) GetUin() uint64 {
	if m != nil {
		return m.Uin
	}
	return 0
}

func (m *RewardRequest) GetMonths() int32 {
	if m != nil {
		return m.Months
	}
	return 0
}

func (m *RewardRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

type RewardResponse struct {
	Uin                  uint64   `protobuf:"varint,2,opt,name=uin,proto3" json:"uin,omitempty"`
	Myslots              []byte   `protobuf:"bytes,3,opt,name=myslots,proto3" json:"myslots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RewardResponse) Reset()         { *m = RewardResponse{} }
func (m *RewardResponse) String() string { return proto.CompactTextString(m) }
func (*RewardResponse) ProtoMessage()    {}
func (*RewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{21}
}

func (m *RewardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewardResponse.Unmarshal(m, b)
}
func (m *RewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewardResponse.Marshal(b, m, deterministic)
}
func (m *RewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardResponse.Merge(m, src)
}
func (m *RewardResponse) XXX_Size() int {
	return xxx_messageInfo_RewardResponse.Size(m)
}
func (m *RewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RewardResponse proto.InternalMessageInfo

func (m *RewardResponse) GetUin() uint64 {
	if m != nil {
		return m.Uin
	}
	return 0
}

func (m *RewardResponse) GetMyslots() []byte {
	if m != nil {
		return m.Myslots
	}
	return nil
}

/////////for non-slot version////
type GetAllStocksRequest struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllStocksRequest) Reset()         { *m = GetAllStocksRequest{} }
func (m *GetAllStocksRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllStocksRequest) ProtoMessage()    {}
func (*GetAllStocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{22}
}

func (m *GetAllStocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllStocksRequest.Unmarshal(m, b)
}
func (m *GetAllStocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllStocksRequest.Marshal(b, m, deterministic)
}
func (m *GetAllStocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllStocksRequest.Merge(m, src)
}
func (m *GetAllStocksRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllStocksRequest.Size(m)
}
func (m *GetAllStocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllStocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllStocksRequest proto.InternalMessageInfo

func (m *GetAllStocksRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type GetAllStocksResponse struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Stocks               []string `protobuf:"bytes,3,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllStocksResponse) Reset()         { *m = GetAllStocksResponse{} }
func (m *GetAllStocksResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllStocksResponse) ProtoMessage()    {}
func (*GetAllStocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{23}
}

func (m *GetAllStocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllStocksResponse.Unmarshal(m, b)
}
func (m *GetAllStocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllStocksResponse.Marshal(b, m, deterministic)
}
func (m *GetAllStocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllStocksResponse.Merge(m, src)
}
func (m *GetAllStocksResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllStocksResponse.Size(m)
}
func (m *GetAllStocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllStocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllStocksResponse proto.InternalMessageInfo

func (m *GetAllStocksResponse) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetAllStocksResponse) GetStocks() []string {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type AddStockRequest struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Stock                string   `protobuf:"bytes,3,opt,name=stock,proto3" json:"stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddStockRequest) Reset()         { *m = AddStockRequest{} }
func (m *AddStockRequest) String() string { return proto.CompactTextString(m) }
func (*AddStockRequest) ProtoMessage()    {}
func (*AddStockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{24}
}

func (m *AddStockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddStockRequest.Unmarshal(m, b)
}
func (m *AddStockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddStockRequest.Marshal(b, m, deterministic)
}
func (m *AddStockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddStockRequest.Merge(m, src)
}
func (m *AddStockRequest) XXX_Size() int {
	return xxx_messageInfo_AddStockRequest.Size(m)
}
func (m *AddStockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddStockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddStockRequest proto.InternalMessageInfo

func (m *AddStockRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *AddStockRequest) GetStock() string {
	if m != nil {
		return m.Stock
	}
	return ""
}

type AddStockResponse struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Stocks               []string `protobuf:"bytes,3,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddStockResponse) Reset()         { *m = AddStockResponse{} }
func (m *AddStockResponse) String() string { return proto.CompactTextString(m) }
func (*AddStockResponse) ProtoMessage()    {}
func (*AddStockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{25}
}

func (m *AddStockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddStockResponse.Unmarshal(m, b)
}
func (m *AddStockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddStockResponse.Marshal(b, m, deterministic)
}
func (m *AddStockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddStockResponse.Merge(m, src)
}
func (m *AddStockResponse) XXX_Size() int {
	return xxx_messageInfo_AddStockResponse.Size(m)
}
func (m *AddStockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddStockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddStockResponse proto.InternalMessageInfo

func (m *AddStockResponse) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *AddStockResponse) GetStocks() []string {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type DelStockRequest struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Stock                string   `protobuf:"bytes,3,opt,name=stock,proto3" json:"stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelStockRequest) Reset()         { *m = DelStockRequest{} }
func (m *DelStockRequest) String() string { return proto.CompactTextString(m) }
func (*DelStockRequest) ProtoMessage()    {}
func (*DelStockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{26}
}

func (m *DelStockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelStockRequest.Unmarshal(m, b)
}
func (m *DelStockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelStockRequest.Marshal(b, m, deterministic)
}
func (m *DelStockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelStockRequest.Merge(m, src)
}
func (m *DelStockRequest) XXX_Size() int {
	return xxx_messageInfo_DelStockRequest.Size(m)
}
func (m *DelStockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelStockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelStockRequest proto.InternalMessageInfo

func (m *DelStockRequest) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DelStockRequest) GetStock() string {
	if m != nil {
		return m.Stock
	}
	return ""
}

type DelStockResponse struct {
	Uid                  uint64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Stocks               []string `protobuf:"bytes,3,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelStockResponse) Reset()         { *m = DelStockResponse{} }
func (m *DelStockResponse) String() string { return proto.CompactTextString(m) }
func (*DelStockResponse) ProtoMessage()    {}
func (*DelStockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbc8b92d9722c1c5, []int{27}
}

func (m *DelStockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelStockResponse.Unmarshal(m, b)
}
func (m *DelStockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelStockResponse.Marshal(b, m, deterministic)
}
func (m *DelStockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelStockResponse.Merge(m, src)
}
func (m *DelStockResponse) XXX_Size() int {
	return xxx_messageInfo_DelStockResponse.Size(m)
}
func (m *DelStockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DelStockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DelStockResponse proto.InternalMessageInfo

func (m *DelStockResponse) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DelStockResponse) GetStocks() []string {
	if m != nil {
		return m.Stocks
	}
	return nil
}

func init() {
	proto.RegisterType((*SetMysymbolRequest)(nil), "proto.SetMysymbolRequest")
	proto.RegisterType((*SetMysymbolResponse)(nil), "proto.SetMysymbolResponse")
	proto.RegisterType((*OpenMyslotRequest)(nil), "proto.OpenMyslotRequest")
	proto.RegisterType((*OpenMyslotResponse)(nil), "proto.OpenMyslotResponse")
	proto.RegisterType((*GetMyslotRequest)(nil), "proto.GetMyslotRequest")
	proto.RegisterType((*GetMyslotResponse)(nil), "proto.GetMyslotResponse")
	proto.RegisterType((*SetMyslotRequest)(nil), "proto.SetMyslotRequest")
	proto.RegisterType((*SetMyslotResponse)(nil), "proto.SetMyslotResponse")
	proto.RegisterType((*HedgeRequest)(nil), "proto.HedgeRequest")
	proto.RegisterType((*HedgeResponse)(nil), "proto.HedgeResponse")
	proto.RegisterType((*PredictRequest)(nil), "proto.PredictRequest")
	proto.RegisterType((*PredictResponse)(nil), "proto.PredictResponse")
	proto.RegisterType((*TimerPredictRequest)(nil), "proto.TimerPredictRequest")
	proto.RegisterType((*TimerPredictResponse)(nil), "proto.TimerPredictResponse")
	proto.RegisterType((*TimerHedgeRequest)(nil), "proto.TimerHedgeRequest")
	proto.RegisterType((*TimerHedgeResponse)(nil), "proto.TimerHedgeResponse")
	proto.RegisterType((*InitSlotsRequest)(nil), "proto.InitSlotsRequest")
	proto.RegisterType((*InitSlotsResponse)(nil), "proto.InitSlotsResponse")
	proto.RegisterType((*RenewSlotRequest)(nil), "proto.RenewSlotRequest")
	proto.RegisterType((*RenewSlotResponse)(nil), "proto.RenewSlotResponse")
	proto.RegisterType((*RewardRequest)(nil), "proto.RewardRequest")
	proto.RegisterType((*RewardResponse)(nil), "proto.RewardResponse")
	proto.RegisterType((*GetAllStocksRequest)(nil), "proto.GetAllStocksRequest")
	proto.RegisterType((*GetAllStocksResponse)(nil), "proto.GetAllStocksResponse")
	proto.RegisterType((*AddStockRequest)(nil), "proto.AddStockRequest")
	proto.RegisterType((*AddStockResponse)(nil), "proto.AddStockResponse")
	proto.RegisterType((*DelStockRequest)(nil), "proto.DelStockRequest")
	proto.RegisterType((*DelStockResponse)(nil), "proto.DelStockResponse")
}

func init() { proto.RegisterFile("hedge.proto", fileDescriptor_dbc8b92d9722c1c5) }

var fileDescriptor_dbc8b92d9722c1c5 = []byte{
	// 820 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x6d, 0x4f, 0xdb, 0x3a,
	0x14, 0xee, 0x5b, 0x92, 0xf6, 0x40, 0x21, 0x75, 0x0b, 0x84, 0xf0, 0xa5, 0xb2, 0x90, 0x2e, 0xe8,
	0x5e, 0x90, 0xee, 0x98, 0x34, 0x31, 0x31, 0x09, 0xb4, 0x69, 0x0c, 0x4d, 0x68, 0x5b, 0x82, 0xb4,
	0x6f, 0x43, 0xd0, 0x58, 0x23, 0x25, 0x4d, 0xba, 0x3a, 0x08, 0xf5, 0x1f, 0xec, 0x67, 0xec, 0xa7,
	0x4e, 0x76, 0x1c, 0xc7, 0x79, 0x69, 0x11, 0x7c, 0xaa, 0x8f, 0x7d, 0xce, 0x73, 0x9e, 0xe3, 0x9c,
	0xe7, 0xb8, 0xb0, 0x72, 0x47, 0xbc, 0x9f, 0xe4, 0x70, 0x3a, 0x8b, 0xe2, 0x08, 0x69, 0xfc, 0x07,
	0x7f, 0x07, 0xe4, 0x92, 0xf8, 0x72, 0x4e, 0xe7, 0x93, 0xdb, 0x28, 0x70, 0xc8, 0xaf, 0x07, 0x42,
	0x63, 0x64, 0x42, 0xf3, 0xc1, 0xf7, 0xac, 0xc6, 0xb0, 0xbe, 0xd7, 0x72, 0xd8, 0x12, 0x6d, 0x81,
	0x41, 0x83, 0x28, 0xbe, 0xf6, 0x3d, 0xab, 0x39, 0xac, 0xef, 0x75, 0x1d, 0x9d, 0x99, 0x17, 0x1e,
	0xda, 0x04, 0x3d, 0x89, 0xb5, 0x5a, 0xc3, 0xfa, 0x5e, 0xc7, 0x11, 0x16, 0xde, 0x87, 0x7e, 0x0e,
	0x98, 0x4e, 0xa3, 0x90, 0x12, 0x84, 0xa0, 0xc5, 0x02, 0x39, 0xc8, 0xaa, 0xc3, 0xd7, 0xf8, 0x1b,
	0xf4, 0xbe, 0x4c, 0x49, 0x78, 0x39, 0x67, 0xd6, 0x62, 0x0a, 0x9b, 0xa0, 0x4f, 0xa2, 0x30, 0xbe,
	0xa3, 0x3c, 0x58, 0x73, 0x84, 0xc5, 0x20, 0xbd, 0x9b, 0x39, 0xe5, 0xf9, 0x35, 0x87, 0xaf, 0xf1,
	0x21, 0x20, 0x15, 0x52, 0x24, 0xb7, 0xc0, 0x98, 0xf0, 0x1d, 0x2a, 0xf2, 0xa7, 0x26, 0xde, 0x05,
	0xf3, 0x9c, 0xb3, 0x5d, 0xc6, 0x00, 0x1f, 0x40, 0x4f, 0xf1, 0x7a, 0x12, 0xf4, 0x07, 0x98, 0xee,
	0x02, 0xd0, 0x66, 0x56, 0x96, 0x09, 0x4d, 0xea, 0x7b, 0x9c, 0x7d, 0xd7, 0x61, 0x4b, 0x56, 0x50,
	0x78, 0x33, 0x21, 0x96, 0xc6, 0x2f, 0x94, 0xaf, 0x79, 0x91, 0x84, 0x8e, 0x2c, 0x3d, 0xd9, 0x63,
	0x6b, 0x7c, 0x0c, 0x3d, 0xb7, 0x44, 0xa7, 0x9c, 0x20, 0xbd, 0xf2, 0x96, 0x72, 0xe5, 0x57, 0xb0,
	0xfa, 0x89, 0x35, 0x43, 0x4a, 0xcb, 0x02, 0xe3, 0x56, 0x7c, 0xc6, 0x06, 0xcf, 0x90, 0x9a, 0x68,
	0x00, 0xda, 0x7d, 0x3c, 0x9f, 0x12, 0x8e, 0xd8, 0x71, 0x12, 0x83, 0xed, 0xd2, 0x51, 0x34, 0x25,
	0xe2, 0xa3, 0x27, 0x06, 0xfe, 0x5d, 0x87, 0xae, 0x80, 0x15, 0x6c, 0x06, 0xa0, 0x79, 0xb1, 0x3f,
	0x21, 0x82, 0x4f, 0x62, 0x64, 0x98, 0x2d, 0x15, 0x53, 0xe1, 0xa0, 0x95, 0x38, 0x24, 0xd9, 0x74,
	0x25, 0x1b, 0xda, 0x81, 0xce, 0x98, 0x5e, 0xcf, 0x08, 0x7d, 0x08, 0x62, 0xcb, 0xe0, 0xc5, 0xb5,
	0xc7, 0xd4, 0xe1, 0x36, 0x3e, 0x85, 0xb5, 0xaf, 0x33, 0xe2, 0xf9, 0xa3, 0x58, 0x29, 0x31, 0x81,
	0xa3, 0x56, 0x63, 0xd8, 0x64, 0xf0, 0xc2, 0xac, 0x2e, 0x11, 0xff, 0x07, 0xeb, 0x12, 0x41, 0x54,
	0xb3, 0x0d, 0xed, 0x31, 0xbd, 0xbe, 0x0f, 0xfc, 0x90, 0x88, 0xdb, 0x34, 0xc6, 0xf4, 0x33, 0x33,
	0xf1, 0xbf, 0xd0, 0xbf, 0xf2, 0x27, 0x64, 0x56, 0x48, 0x5a, 0x0d, 0x7d, 0x04, 0x83, 0xbc, 0xb3,
	0xc0, 0x4f, 0x2a, 0xe2, 0xf8, 0x54, 0x24, 0x68, 0x8b, 0x04, 0x14, 0xef, 0x43, 0x8f, 0x07, 0xe5,
	0xbe, 0x5b, 0x35, 0xfe, 0xff, 0x80, 0x54, 0xd7, 0x1c, 0xba, 0xb8, 0x2f, 0xbd, 0x70, 0x5f, 0xbb,
	0x60, 0x5e, 0x84, 0x7e, 0xec, 0xb2, 0xc6, 0x5d, 0x2a, 0x00, 0xc5, 0xab, 0x2c, 0x80, 0x46, 0x5e,
	0x00, 0x3e, 0x98, 0x0e, 0x09, 0xc9, 0xa3, 0xbb, 0x54, 0xd7, 0xcb, 0x46, 0x8b, 0x10, 0x7c, 0xab,
	0x52, 0xf0, 0x9a, 0x22, 0xf8, 0x03, 0xe8, 0x29, 0xa9, 0x9e, 0x94, 0xe6, 0x25, 0x74, 0x1d, 0xf2,
	0x78, 0x33, 0xf3, 0x72, 0xb4, 0xc2, 0x8c, 0x56, 0xf8, 0xac, 0xec, 0x27, 0xb0, 0x96, 0xc2, 0xa9,
	0x32, 0xcc, 0xe1, 0x2d, 0x26, 0xf3, 0x0f, 0xf4, 0xcf, 0x49, 0x7c, 0x16, 0x04, 0x6e, 0x1c, 0x8d,
	0xee, 0x97, 0x5c, 0xff, 0x29, 0x0c, 0xf2, 0x8e, 0x79, 0xcd, 0xe7, 0x67, 0x25, 0xe5, 0x3e, 0x56,
	0x93, 0xf7, 0xba, 0xb0, 0xf0, 0x31, 0xac, 0x9f, 0x79, 0x1e, 0x0f, 0x5f, 0xfc, 0x41, 0x98, 0xdc,
	0x98, 0x47, 0xda, 0x54, 0xdc, 0xc0, 0x27, 0x60, 0x66, 0xa1, 0x2f, 0x49, 0xfc, 0x81, 0x04, 0x2f,
	0x4d, 0x9c, 0x85, 0x3e, 0x37, 0xf1, 0xab, 0x3f, 0x06, 0x68, 0x5c, 0x07, 0xe8, 0x75, 0xba, 0xe8,
	0x27, 0x4f, 0xe0, 0xa1, 0xaa, 0x24, 0x7b, 0x90, 0xdf, 0x4c, 0xf2, 0xe0, 0x1a, 0x7a, 0x0b, 0x86,
	0x90, 0x29, 0xda, 0x10, 0x2e, 0x79, 0x8d, 0xdb, 0x9b, 0xc5, 0x6d, 0x19, 0x7b, 0x01, 0xab, 0xaa,
	0xce, 0x91, 0x2d, 0x3c, 0x2b, 0x26, 0x85, 0xbd, 0x53, 0x79, 0x26, 0xa1, 0xde, 0x03, 0x64, 0x92,
	0x46, 0x96, 0xea, 0x9c, 0x2b, 0x63, 0xbb, 0xe2, 0x44, 0x82, 0x7c, 0x84, 0x15, 0xe5, 0x4d, 0x46,
	0xa9, 0x6f, 0xf9, 0x0f, 0x80, 0x6d, 0x57, 0x1d, 0xa9, 0x64, 0xb2, 0xd7, 0x55, 0x92, 0x29, 0xbd,
	0xe1, 0x92, 0x4c, 0xf9, 0x29, 0xc6, 0x35, 0x74, 0x0a, 0x1d, 0xf9, 0x98, 0xa2, 0x2d, 0xe1, 0x59,
	0x7c, 0x84, 0x6d, 0xab, 0x7c, 0xa0, 0x22, 0xb8, 0x25, 0x04, 0x77, 0x11, 0x82, 0x5b, 0x8d, 0x20,
	0xe7, 0x99, 0x44, 0x28, 0xce, 0x41, 0x89, 0x50, 0x1a, 0x7d, 0x09, 0x82, 0x9c, 0x3b, 0x12, 0xa1,
	0x38, 0xf4, 0x24, 0x42, 0x69, 0x44, 0xe1, 0x1a, 0x7a, 0x03, 0x7a, 0x32, 0x3b, 0xd0, 0x40, 0x7a,
	0x29, 0x93, 0xc9, 0xde, 0x28, 0xec, 0xaa, 0xdd, 0xa5, 0x4e, 0x03, 0xd9, 0x5d, 0x15, 0xb3, 0x44,
	0x76, 0x57, 0xd5, 0xf8, 0xc0, 0x35, 0xf4, 0x0e, 0xda, 0xa9, 0xb6, 0x51, 0xda, 0xce, 0x85, 0x39,
	0x61, 0x6f, 0x95, 0xf6, 0xd5, 0xf0, 0x54, 0xa1, 0x32, 0xbc, 0xa0, 0x76, 0x19, 0x5e, 0x94, 0x32,
	0xae, 0xdd, 0xea, 0xfc, 0xe4, 0xe8, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x09, 0x17, 0x40, 0x42,
	0xa0, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HedgeClient is the client API for Hedge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HedgeClient interface {
	Hedge(ctx context.Context, in *HedgeRequest, opts ...grpc.CallOption) (*HedgeResponse, error)
	Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictResponse, error)
	TimerPredict(ctx context.Context, in *TimerPredictRequest, opts ...grpc.CallOption) (*TimerPredictResponse, error)
	TimerHedge(ctx context.Context, in *TimerHedgeRequest, opts ...grpc.CallOption) (*TimerHedgeResponse, error)
	SetMysymbol(ctx context.Context, in *SetMysymbolRequest, opts ...grpc.CallOption) (*SetMysymbolResponse, error)
	OpenMyslot(ctx context.Context, in *OpenMyslotRequest, opts ...grpc.CallOption) (*OpenMyslotResponse, error)
	GetMyslot(ctx context.Context, in *GetMyslotRequest, opts ...grpc.CallOption) (*GetMyslotResponse, error)
	SetMyslot(ctx context.Context, in *SetMyslotRequest, opts ...grpc.CallOption) (*SetMyslotResponse, error)
	InitSlots(ctx context.Context, in *InitSlotsRequest, opts ...grpc.CallOption) (*InitSlotsResponse, error)
	RenewSlot(ctx context.Context, in *RenewSlotRequest, opts ...grpc.CallOption) (*RenewSlotResponse, error)
	Reward(ctx context.Context, in *RewardRequest, opts ...grpc.CallOption) (*RewardResponse, error)
	/////for non-slot version///
	GetAllStocks(ctx context.Context, in *GetAllStocksRequest, opts ...grpc.CallOption) (*GetAllStocksResponse, error)
	AddStock(ctx context.Context, in *AddStockRequest, opts ...grpc.CallOption) (*AddStockResponse, error)
	DelStock(ctx context.Context, in *DelStockRequest, opts ...grpc.CallOption) (*DelStockResponse, error)
}

type hedgeClient struct {
	cc *grpc.ClientConn
}

func NewHedgeClient(cc *grpc.ClientConn) HedgeClient {
	return &hedgeClient{cc}
}

func (c *hedgeClient) Hedge(ctx context.Context, in *HedgeRequest, opts ...grpc.CallOption) (*HedgeResponse, error) {
	out := new(HedgeResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/Hedge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictResponse, error) {
	out := new(PredictResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/Predict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) TimerPredict(ctx context.Context, in *TimerPredictRequest, opts ...grpc.CallOption) (*TimerPredictResponse, error) {
	out := new(TimerPredictResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/TimerPredict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) TimerHedge(ctx context.Context, in *TimerHedgeRequest, opts ...grpc.CallOption) (*TimerHedgeResponse, error) {
	out := new(TimerHedgeResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/TimerHedge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) SetMysymbol(ctx context.Context, in *SetMysymbolRequest, opts ...grpc.CallOption) (*SetMysymbolResponse, error) {
	out := new(SetMysymbolResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/SetMysymbol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) OpenMyslot(ctx context.Context, in *OpenMyslotRequest, opts ...grpc.CallOption) (*OpenMyslotResponse, error) {
	out := new(OpenMyslotResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/OpenMyslot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) GetMyslot(ctx context.Context, in *GetMyslotRequest, opts ...grpc.CallOption) (*GetMyslotResponse, error) {
	out := new(GetMyslotResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/GetMyslot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) SetMyslot(ctx context.Context, in *SetMyslotRequest, opts ...grpc.CallOption) (*SetMyslotResponse, error) {
	out := new(SetMyslotResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/SetMyslot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) InitSlots(ctx context.Context, in *InitSlotsRequest, opts ...grpc.CallOption) (*InitSlotsResponse, error) {
	out := new(InitSlotsResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/InitSlots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) RenewSlot(ctx context.Context, in *RenewSlotRequest, opts ...grpc.CallOption) (*RenewSlotResponse, error) {
	out := new(RenewSlotResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/RenewSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) Reward(ctx context.Context, in *RewardRequest, opts ...grpc.CallOption) (*RewardResponse, error) {
	out := new(RewardResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/Reward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) GetAllStocks(ctx context.Context, in *GetAllStocksRequest, opts ...grpc.CallOption) (*GetAllStocksResponse, error) {
	out := new(GetAllStocksResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/GetAllStocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) AddStock(ctx context.Context, in *AddStockRequest, opts ...grpc.CallOption) (*AddStockResponse, error) {
	out := new(AddStockResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/AddStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hedgeClient) DelStock(ctx context.Context, in *DelStockRequest, opts ...grpc.CallOption) (*DelStockResponse, error) {
	out := new(DelStockResponse)
	err := c.cc.Invoke(ctx, "/proto.Hedge/DelStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HedgeServer is the server API for Hedge service.
type HedgeServer interface {
	Hedge(context.Context, *HedgeRequest) (*HedgeResponse, error)
	Predict(context.Context, *PredictRequest) (*PredictResponse, error)
	TimerPredict(context.Context, *TimerPredictRequest) (*TimerPredictResponse, error)
	TimerHedge(context.Context, *TimerHedgeRequest) (*TimerHedgeResponse, error)
	SetMysymbol(context.Context, *SetMysymbolRequest) (*SetMysymbolResponse, error)
	OpenMyslot(context.Context, *OpenMyslotRequest) (*OpenMyslotResponse, error)
	GetMyslot(context.Context, *GetMyslotRequest) (*GetMyslotResponse, error)
	SetMyslot(context.Context, *SetMyslotRequest) (*SetMyslotResponse, error)
	InitSlots(context.Context, *InitSlotsRequest) (*InitSlotsResponse, error)
	RenewSlot(context.Context, *RenewSlotRequest) (*RenewSlotResponse, error)
	Reward(context.Context, *RewardRequest) (*RewardResponse, error)
	/////for non-slot version///
	GetAllStocks(context.Context, *GetAllStocksRequest) (*GetAllStocksResponse, error)
	AddStock(context.Context, *AddStockRequest) (*AddStockResponse, error)
	DelStock(context.Context, *DelStockRequest) (*DelStockResponse, error)
}

// UnimplementedHedgeServer can be embedded to have forward compatible implementations.
type UnimplementedHedgeServer struct {
}

func (*UnimplementedHedgeServer) Hedge(ctx context.Context, req *HedgeRequest) (*HedgeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hedge not implemented")
}
func (*UnimplementedHedgeServer) Predict(ctx context.Context, req *PredictRequest) (*PredictResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Predict not implemented")
}
func (*UnimplementedHedgeServer) TimerPredict(ctx context.Context, req *TimerPredictRequest) (*TimerPredictResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TimerPredict not implemented")
}
func (*UnimplementedHedgeServer) TimerHedge(ctx context.Context, req *TimerHedgeRequest) (*TimerHedgeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TimerHedge not implemented")
}
func (*UnimplementedHedgeServer) SetMysymbol(ctx context.Context, req *SetMysymbolRequest) (*SetMysymbolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMysymbol not implemented")
}
func (*UnimplementedHedgeServer) OpenMyslot(ctx context.Context, req *OpenMyslotRequest) (*OpenMyslotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenMyslot not implemented")
}
func (*UnimplementedHedgeServer) GetMyslot(ctx context.Context, req *GetMyslotRequest) (*GetMyslotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyslot not implemented")
}
func (*UnimplementedHedgeServer) SetMyslot(ctx context.Context, req *SetMyslotRequest) (*SetMyslotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMyslot not implemented")
}
func (*UnimplementedHedgeServer) InitSlots(ctx context.Context, req *InitSlotsRequest) (*InitSlotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitSlots not implemented")
}
func (*UnimplementedHedgeServer) RenewSlot(ctx context.Context, req *RenewSlotRequest) (*RenewSlotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenewSlot not implemented")
}
func (*UnimplementedHedgeServer) Reward(ctx context.Context, req *RewardRequest) (*RewardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reward not implemented")
}
func (*UnimplementedHedgeServer) GetAllStocks(ctx context.Context, req *GetAllStocksRequest) (*GetAllStocksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllStocks not implemented")
}
func (*UnimplementedHedgeServer) AddStock(ctx context.Context, req *AddStockRequest) (*AddStockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddStock not implemented")
}
func (*UnimplementedHedgeServer) DelStock(ctx context.Context, req *DelStockRequest) (*DelStockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelStock not implemented")
}

func RegisterHedgeServer(s *grpc.Server, srv HedgeServer) {
	s.RegisterService(&_Hedge_serviceDesc, srv)
}

func _Hedge_Hedge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HedgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).Hedge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/Hedge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).Hedge(ctx, req.(*HedgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_Predict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).Predict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/Predict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).Predict(ctx, req.(*PredictRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_TimerPredict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimerPredictRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).TimerPredict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/TimerPredict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).TimerPredict(ctx, req.(*TimerPredictRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_TimerHedge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimerHedgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).TimerHedge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/TimerHedge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).TimerHedge(ctx, req.(*TimerHedgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_SetMysymbol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMysymbolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).SetMysymbol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/SetMysymbol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).SetMysymbol(ctx, req.(*SetMysymbolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_OpenMyslot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenMyslotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).OpenMyslot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/OpenMyslot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).OpenMyslot(ctx, req.(*OpenMyslotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_GetMyslot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMyslotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).GetMyslot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/GetMyslot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).GetMyslot(ctx, req.(*GetMyslotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_SetMyslot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMyslotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).SetMyslot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/SetMyslot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).SetMyslot(ctx, req.(*SetMyslotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_InitSlots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitSlotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).InitSlots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/InitSlots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).InitSlots(ctx, req.(*InitSlotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_RenewSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewSlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).RenewSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/RenewSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).RenewSlot(ctx, req.(*RenewSlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_Reward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RewardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).Reward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/Reward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).Reward(ctx, req.(*RewardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_GetAllStocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllStocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).GetAllStocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/GetAllStocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).GetAllStocks(ctx, req.(*GetAllStocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_AddStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).AddStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/AddStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).AddStock(ctx, req.(*AddStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hedge_DelStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HedgeServer).DelStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hedge/DelStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HedgeServer).DelStock(ctx, req.(*DelStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hedge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Hedge",
	HandlerType: (*HedgeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hedge",
			Handler:    _Hedge_Hedge_Handler,
		},
		{
			MethodName: "Predict",
			Handler:    _Hedge_Predict_Handler,
		},
		{
			MethodName: "TimerPredict",
			Handler:    _Hedge_TimerPredict_Handler,
		},
		{
			MethodName: "TimerHedge",
			Handler:    _Hedge_TimerHedge_Handler,
		},
		{
			MethodName: "SetMysymbol",
			Handler:    _Hedge_SetMysymbol_Handler,
		},
		{
			MethodName: "OpenMyslot",
			Handler:    _Hedge_OpenMyslot_Handler,
		},
		{
			MethodName: "GetMyslot",
			Handler:    _Hedge_GetMyslot_Handler,
		},
		{
			MethodName: "SetMyslot",
			Handler:    _Hedge_SetMyslot_Handler,
		},
		{
			MethodName: "InitSlots",
			Handler:    _Hedge_InitSlots_Handler,
		},
		{
			MethodName: "RenewSlot",
			Handler:    _Hedge_RenewSlot_Handler,
		},
		{
			MethodName: "Reward",
			Handler:    _Hedge_Reward_Handler,
		},
		{
			MethodName: "GetAllStocks",
			Handler:    _Hedge_GetAllStocks_Handler,
		},
		{
			MethodName: "AddStock",
			Handler:    _Hedge_AddStock_Handler,
		},
		{
			MethodName: "DelStock",
			Handler:    _Hedge_DelStock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hedge.proto",
}
